---
import type { Props } from '@astrojs/starlight/props';
import { Icon } from '@astrojs/starlight/components';
import TableOfContentsList from './TableOfContents/TableOfContentsList.astro';

const { labels, toc } = Astro.props;
---

{
	toc && (
		<mobile-starlight-toc data-min-h={toc.minHeadingLevel} data-max-h={toc.maxHeadingLevel}>
			<nav aria-labelledby="starlight__on-this-page--mobile">
				<details id="starlight__mobile-toc">
					<summary id="starlight__on-this-page--mobile" class="flex">
						<div class="toggle flex">
							{labels['tableOfContents.onThisPage']}
							<Icon name={'right-caret'} class="caret" size="1rem" />
						</div>
						<span class="display-current" />
					</summary>
					<div class="dropdown">
						<TableOfContentsList toc={toc.items} isMobile />
					</div>
				</details>
			</nav>
		</mobile-starlight-toc>
	)
}

<style>
	nav {
    @apply fixed mt-4 z-20 w-[calc(100%-4rem)] lg:w-[calc(100%-21.6rem)];
	}

	summary {
		gap: 0.5rem;
		align-items: center;
    @apply text-sm;
	}
	summary::marker,
	summary::-webkit-details-marker {
		display: none;
	}

	.toggle {
		flex-shrink: 0;
		gap: 1rem;
		align-items: center;
		justify-content: space-between;
		line-height: 1;
		user-select: none;
		cursor: pointer;

    @apply bg-background rounded-lg border text-muted-foreground py-3 px-5 font-medium w-full;
	}

  details[open] .toggle {
    @apply rounded-b-none;
  }

  .caret {
    @apply transition;
  }

	:global([dir='rtl']) .caret {
		transform: rotateZ(180deg);
	}
	details[open] .caret {
		transform: rotateZ(90deg);
	}

	.display-current {
		white-space: nowrap;
		text-overflow: ellipsis;
		overflow: hidden;
		color: var(--sl-color-white);
	}

	.dropdown {
		--border-top: 1px;
		overflow-y: auto;
		overscroll-behavior: contain;
    @apply bg-background border -mt-px shadow-sm w-full rounded-lg rounded-t-none;
	}
</style>
